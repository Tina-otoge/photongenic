{% extends "base.html.j2" %}

{% block content%}
<div class="row">

    <h1>Dashboard</h1>

    <p>
        <a class="btn" id="btn-wake-all">Wake all</a>
    </p>
    {% for client in photon.clients.values() %}
    <div class="col s12 m6 l4">
        <div class="client card" data-id="{{ client.id }}">
            {% if client.image %}
            <div class="card-image">
                <img src="{{ url_for('custom.static', filename=client.image) }}" />
                <span class="card-title">{{ client.name }}</span>
            </div>
            {% else %}
            <div class="card-title">{{ client.name }} (#{{ client.id }})</div>
            {% endif %}
            <div class="card-content">
                <div class="meta">
                    <span class="id badge">#{{ client.id }}</span>
                    <span class="state">
                        Unknown
                    </span>
                </div>

                <div class="results">
                </div>
            </div>
            <div class="card-action">
                <a class="export">Export</a>
                <a class="wake">Wake</a>
            </div>
        </div>
    </div>
    {% endfor %}
</div>

</div>
<script>
    let wakers = [];

    document.querySelector('#btn-wake-all').addEventListener('click', () => {
        for (let waker of wakers) {
            waker();
        }
    });

    for (let client of document.querySelectorAll('.client')) {
        let result = client.querySelector('.results');
        let state = client.querySelector('.state');
        client.querySelector('.export').addEventListener('click', async () => {
            result.innerHTML = 'Exporting...';
            let response = await fetch(`${client.dataset.id}/export`, { method: 'POST' });
            let json = await response.json();
            result.innerHTML = `<a href="${json.url}">Download export</a>`;
        });

        async function wake() {
            result.innerHTML = 'Waking up...';
            let response = await fetch(`${client.dataset.id}/wake`, { method: 'POST' });
            result.innerHTML = 'Signal sent';
        }
        wakers.push(wake);

        client.querySelector('.wake').addEventListener('click', wake);

        let refresh = async () => {
            setTimeout(refresh, 5000);

            let response = await fetch(`${client.dataset.id}/`);
            let json = await response.json();
            // result.innerHTML = `<code>${JSON.stringify(json)}</code>`;
            client.classList.remove('inactive');
            client.classList.remove('active');
            if (json.active) {
                state.innerHTML = 'Running';
                client.classList.add('active');
            } else {
                state.innerHTML = 'Not running';
                client.classList.add('inactive');
            }
        };
        refresh();
    }
</script>
{% endblock %}
